(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{419:function(t,e,a){"use strict";a.r(e);var s=a(11),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"getting-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting started")]),t._v(" "),a("p",[t._v("The following examples install, import, instantiate, and quick start the SDK for a JavaScript-based app.")]),t._v(" "),a("p",[t._v("For language specifics, check the relevant sections.")]),t._v(" "),a("h2",{attrs:{id:"install-the-sdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-the-sdk"}},[t._v("#")]),t._v(" Install the SDK")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" @metamask/sdk\nor\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i @metamask/sdk\n")])])]),a("h2",{attrs:{id:"import-the-sdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-the-sdk"}},[t._v("#")]),t._v(" Import the SDK")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" MetaMaskSDK "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@metamask/sdk'")]),t._v("\n")])])]),a("h2",{attrs:{id:"instantiate-the-sdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instantiate-the-sdk"}},[t._v("#")]),t._v(" Instantiate the SDK")]),t._v(" "),a("p",[t._v("For all Javascript-based apps, instantiate the SDK like this:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ethereum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MetaMaskSDK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Option name")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Default value")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("injectProvider")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("true")])]),t._v(" "),a("td",[t._v("Note: it won't inject for NodeJS or React Native as the window object is unavailable.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("forceInjectProvider")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("Force injection even if another provider is already present on the window object.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("forceDeleteProvider")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("Force deletion of a provider that exists on window.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("checkInstallationImmediately")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("The SDK checks if MetaMask is installed when a call to "),a("code",[t._v("eth_requestAccounts")]),t._v(" is made. When "),a("code",[t._v("true")]),t._v(" it checks before any call is made.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("checkInstallationOnAllCalls")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("Normally checked when a call to "),a("code",[t._v("eth_requestAccounts")]),t._v(" is made. When "),a("code",[t._v("true")]),t._v(" it checks on all calls.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("shouldShimWeb3")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("true")])]),t._v(" "),a("td",[t._v("Set if "),a("code",[t._v("window.web3")]),t._v(" should be shimmed for legacy compatibility purposes. "),a("a",{attrs:{href:"https://docs.metamask.io/guide/provider-migration.html#replacing-window-web3",target:"_blank",rel:"noopener noreferrer"}},[t._v("More info"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("preferDesktop")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("For a web dapp running on a desktop browser without a MetaMask extension, the SDK gives the option to connect with MetaMask Mobile wallet with a QR code. When "),a("code",[t._v("true")]),t._v(", the SDK guides the user to install MetaMask extension instead.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("openDeeplink")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("(deeplinkUrl: string) => void")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("undefined")])]),t._v(" "),a("td",[t._v("Platforms open deep links differently. e.g, web: "),a("code",[t._v("window.open")]),t._v(" versus React Native: "),a("code",[t._v("Linking.open")]),t._v(". This function retrieves the deep link url and allows developers to customize how it opens.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("communicationLayerPreference")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v('"socket" or "webrtc" : string')])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("socket")])]),t._v(" "),a("td",[t._v("Defines the communication library that dapp and MetaMask wallet use to communicate with each other. Waku coming soon.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("webRTCLib")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("WebRTC Lib")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("undefined")])]),t._v(" "),a("td",[t._v("Not installed on the SDK by default. Check the React Native section to see how to install it.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("WalletConnectInstance")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("WalletConnect Lib")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("undefined")])]),t._v(" "),a("td",[t._v("Another way of connecting a dapp to MetaMask. Not installed by default. Check !!here?? on how to install it.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("forceRestartWalletConnect")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("Set "),a("code",[t._v("forceRestartWalletConnect")]),t._v(" to "),a("code",[t._v("true")]),t._v(" to kill the previous WalletConnect session and start another one.")])])])]),t._v(" "),a("h2",{attrs:{id:"use-the-sdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-the-sdk"}},[t._v("#")]),t._v(" Use the SDK")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("ethereum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eth_requestAccounts'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("params")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("For possible methods, check "),a("RouterLink",{attrs:{to:"/guide/guide/ethereum-provider.html"}},[t._v("the Ethereum Provider API")])],1),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("If "),a("code",[t._v("injectProvider")]),t._v(" is "),a("code",[t._v("true")]),t._v(" then the "),a("code",[t._v("ethereum")]),t._v(" object should be available in "),a("code",[t._v("window.ethereum")]),t._v(".")])])])}),[],!1,null,null,null);e.default=n.exports}}]);